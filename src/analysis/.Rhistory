plot_time
plot_speedup
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "top") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "right") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
plot_time + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_time
plot_time + scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_speedup + scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_time <- res_performance %>%
ggplot() + geom_line(aes(x = cores, y = elapsed, color = wf, linetype = as.factor(processes))) +
geom_point(aes(x = cores, y = elapsed, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_speedup <- speedup %>% select(-Cromwell_cwl, -Cromwell_wdl, -Nextflow) %>%
gather(ratio, value, -cores, -processes) %>% ggplot() +
geom_line(aes(x = cores, y = value, linetype = as.factor(processes),
color = as.factor(ratio))) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "right") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
plot_speedup
plot_time
plot_speedup
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v")
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v") +  ggsave("Execution_time.png")
res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1))
plot_cpu <- res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
ggsave("CPU_utilization.png")
res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = involuntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = involuntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Involuntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1))
plot_cpu <- res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_involuntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = involuntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = involuntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Involuntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_voluntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = voluntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = voluntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Voluntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_time <- res_performance %>%
ggplot() + geom_line(aes(x = cores, y = elapsed, color = wf, linetype = as.factor(processes))) +
geom_point(aes(x = cores, y = elapsed, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_time
plot_speedup <- speedup %>% select(-Cromwell_cwl, -Cromwell_wdl, -Nextflow) %>%
gather(ratio, value, -cores, -processes) %>% ggplot() +
geom_line(aes(x = cores, y = value, linetype = as.factor(processes),
color = as.factor(ratio))) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_speedup
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v") +  ggsave("Execution_time.png")
plot_cpu <- res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
plot_cpu <- res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
ggsave("CPU_utilization.png")
plot_involuntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = involuntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = involuntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Involuntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
ggsave("InvoluntaryContextSwitch.png")
plot_voluntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = voluntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = voluntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Voluntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
ggsave("VoluntaryContextSwitch.png")
data_nf_hosts_nodes <- read_delim("../nf/results.nf/summarize_hosts_nodes.txt", delim = " ") %>%
mutate(wf = "Nextflow")
data_wdl_hosts_nodes <- read_delim("../wdl/results.wdl/summarize_hosts_nodes.txt", delim = " ") %>%
mutate(wf = "Cromwell_wdl")
data_cwl_hosts_nodes <- read_delim("../cwl/results.cwl/summarize_hosts_nodes.txt", delim = " ") %>%
mutate(wf = "Cromwell_cwl")
data_wdl_hosts_nodes <- read_delim("../wdl/results.cromwell/summarize_hosts_nodes.txt", delim = " ") %>%
mutate(wf = "Cromwell_wdl")
data_cwl_hosts_nodes <- read_delim("../cwl/results.cromwell/summarize_hosts_nodes.txt", delim = " ") %>%
mutate(wf = "Cromwell_cwl")
nodes <- bind_rows(data_nf_hosts_nodes, data_wdl_hosts_nodes, data_cwl_hosts_nodes) %>%
mutate(processes = as.double(str_replace(processes, "host", "")),
tasks = as.double(str_replace_all(tasks, "[^0-9]", "")))
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
ggsave("Execution_nodes.png")
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
ggsave("Execution_nodes.png")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
scale_y_discrete("Nodes")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
scale_y_discrete("Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) #+
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_discrete("Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_discrete(name = "Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_discrete( breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_discrete(name = "Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_discrete(name = "Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(name = "Nodes", breaks = seq(1,10,1))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(name = "Nodes", breaks = seq(1,10,1)) +
annotation_logticks(sides = 'b') +
theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) #+
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(name = "Nodes", breaks = seq(1,10,1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
annotation_logticks(sides = 'b') +
theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") #+
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(name = "Nodes", breaks = seq(1,10,1)) +
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9")) +
annotation_logticks(sides = 'b') +
theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
colors <- c("#CC6666", "#9999CC", "#66CC99")
res_performance %>%
ggplot() + geom_line(aes(x = cores, y = elapsed, color = wf, linetype = as.factor(processes))) +
geom_point(aes(x = cores, y = elapsed, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=colors)
plot_time <- res_performance %>%
ggplot() + geom_line(aes(x = cores, y = elapsed, color = wf, linetype = as.factor(processes))) +
geom_point(aes(x = cores, y = elapsed, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values=colors)
plot_time <- res_performance %>%
ggplot() + geom_line(aes(x = cores, y = elapsed, color = wf, linetype = as.factor(processes))) +
geom_point(aes(x = cores, y = elapsed, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors)
plot_time
plot_speedup <- speedup %>% select(-Cromwell_cwl, -Cromwell_wdl, -Nextflow) %>%
gather(ratio, value, -cores, -processes) %>% ggplot() +
geom_line(aes(x = cores, y = value, linetype = as.factor(processes),
color = as.factor(ratio))) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors)
plot_speedup
cowplot::plot_grid(plot_time + theme(legend.position = "top", axis.title.x = element_blank()) ,
plot_speedup + theme(legend.position = "none") + ylab("Speed up"),
nrow = 2, rel_heights = c(.75, .25), align = "v") +  ggsave("Execution_time.png")
speedup %>% select(-Cromwell_cwl, -Cromwell_wdl, -Nextflow) %>%
gather(ratio, value, -cores, -processes) %>% ggplot() +
geom_line(aes(x = cores, y = value, linetype = as.factor(processes),
color = as.factor(ratio))) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Elapsed time (s)") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors)
cowplot::plot_grid(plot_time + theme(legend.position = "top",
axis.title.x = element_blank()),
plot_speedup + theme(legend.position = "none"),
nrow = 2, rel_heights = c(.75, .25), align = "v") +
ggsave("Execution_time.png")
plot_cpu <- res_performance %>%
mutate(cpu = as.double(str_remove(cpu,"%")),
processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = cpu, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = cpu, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("CPU utilization") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors) +
ggsave("CPU_utilization.png")
plot_involuntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = involuntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = involuntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Involuntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors) +
ggsave("InvoluntaryContextSwitch.png")
plot_voluntaryContextSwitch <- res_performance %>%
mutate(processes = as.factor(processes)) %>%
ggplot() + geom_line(aes(x = cores, y = voluntaryContextSwitch, color = wf, linetype = processes)) +
geom_point(aes(x = cores, y = voluntaryContextSwitch, color = wf))  +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks") +  ylab("Voluntary Context Switches") + theme_bw() +
labs(color = str_wrap("Workflow management system", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
scale_color_manual(values = colors) +
ggsave("VoluntaryContextSwitch.png")
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() +
geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(name = "Number of tasks (log10 scale)",
breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
scale_y_continuous(name = "Nodes", breaks = seq(1,10,1)) +
scale_color_manual(values = colors) +
annotation_logticks(sides = 'b') +
theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
# annotate("Text", x = 1, y = 10, hjust = 0,
#          label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
