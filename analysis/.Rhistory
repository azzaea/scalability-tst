labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
scale_x_log10() + annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
require(scales)
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
plot_nodes
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
nodes %>% arrange(tasks) %>% View()
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96)
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96) %>% select(tasks, theory)
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = round(theory))) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = tasks/96) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = ceiling(theory))) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
nodes <- bind_rows(data_nf_hosts_nodes, data_wdl_hosts_nodes) %>%
mutate(processes = as.double(str_replace(processes, "host", "")),
tasks = as.double(str_replace_all(tasks, "[^0-9]", "")))
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
nodes %>%
ggplot(nodes) + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
nodes
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
nodes %>%
ggplot(data = nodes) + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
nodes %>%
ggplot(data = nodes) + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
nodes %>%
ggplot(data = nodes) + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf))
nodes
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes)))
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf))
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15))
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
# geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top")# +
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
nodes %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text",
x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:15)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + #scale_y_discrete(limits=c(0:15)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + #scale_y_discrete(limits=c(0:14)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:14)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) + scale_y_discrete(limits=c(0:13)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
plot_nodes
plot_nodes <- left_join(res_performance, nodes,
by = c("wf" = "wf", "tasks" = "tasks", "processes" = "processes" ))  %>%
mutate(theory = ceiling(tasks/96)) %>%
ggplot() + geom_line(aes(x=tasks, y = nodes, color =wf, linetype = as.factor(processes))) +
geom_point(aes(x=tasks, y = nodes, color = wf)) +
geom_line(aes(x=tasks, y = theory)) +
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x))) +
annotation_logticks(sides = 'b') +
xlab("Number of tasks (log10 scale)") +  ylab("Nodes") + theme_bw() +
labs(color = str_wrap("Executor", 10), linetype = "Workflow steps") +
guides(color = guide_legend(order = 1)) +
annotate("Text", x = 1, y = 10, hjust = 0,
label = "AWS Compute nodes:\n\tType: m5a.24xlarge \n\tCores: 96") +
theme(legend.position = "top") +
ggsave("Execution_nodes.png")
library(broom)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tidytext)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text
text_df <- tibble(line = 1:4, text = text)
text_df
text_df %>%
unnest_tokens(word, text)
library(janeaustenr)
library(dplyr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
tidy_books <- original_books %>%
unnest_tokens(word, text)
tidy_books
data(stop_words)
tidy_books <- tidy_books %>%
anti_join(stop_words)
tidy_books %>%
count(word, sort = TRUE)
library(ggplot2)
tidy_books %>%
count(word, sort = TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip()
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_hgwells %>%
count(word, sort = TRUE)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
tidy_bronte <- bronte %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_bronte %>%
count(word, sort = TRUE)
library(tidyr)
frequency <- bind_rows(mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Brontë Sisters`:`H.G. Wells`)
library(scales)
ggplot(frequency, aes(x = proportion, y = `Jane Austen`, color = abs(`Jane Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ proportion + `Jane Austen`)
cor.test(data = frequency[frequency$author == "H.G. Wells",],
~ proportion + `Jane Austen`)
x='dfkdj'
y="dfdj"
text = c('azza ahmed')
grep("azza*ahmed", text)
grep("azza.*ahmed", text)
grep("azza.*ahmed", text)
grep("az.*ahmed", text)
library(stringr)
str_detect("az.*ahmed", text)
str_detect("azz.*ahmed", text)
str_detect("az*ahmed", text)
rgamma(shape = .5, scale = 1, n = 10)
